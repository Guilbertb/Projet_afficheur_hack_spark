#!/usr/bin/python
# vim : set fileencoding=utf-8 :

def plot (x,y):
  screen[y][x]=0


def locate(x,y,car):
  for rang in range(8):
    for ligne in range(8):
      
      n=pow(2,8-rang)
      if ((police[car][ligne] & n)==n):
	plot(x+rang,y+ligne)


###########################################
# Tableau de polices 8bits X 8bits        #
###########################################

police = [
	  [0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C],      #0    /0
	  [0x10,0x30,0x50,0x10,0x10,0x10,0x10,0x10],      #1    /1
	  [0x7E,0x2,0x2,0x7E,0x40,0x40,0x40,0x7E],        #2    /2
	  [0x3E,0x2,0x2,0x3E,0x2,0x2,0x3E,0x0],           #3    /3
	  [0x8,0x18,0x28,0x48,0xFE,0x8,0x8,0x8],          #4    /4
	  [0x3C,0x20,0x20,0x3C,0x4,0x4,0x3C,0x0],         #5    /5
	  [0x3C,0x20,0x20,0x3C,0x24,0x24,0x3C,0x0],       #6    /6
	  [0x3E,0x22,0x4,0x8,0x8,0x8,0x8,0x8],            #7    /7
	  [0x0,0x3E,0x22,0x22,0x3E,0x22,0x22,0x3E],       #8    /8
	  [0x3E,0x22,0x22,0x3E,0x2,0x2,0x2,0x3E],         #9    /9
	  [0x8,0x14,0x22,0x3E,0x22,0x22,0x22,0x22],       #A    /10
	  [0x3C,0x22,0x22,0x3E,0x22,0x22,0x22,0x3C],      #B    /11
	  [0x3C,0x40,0x40,0x40,0x40,0x40,0x40,0x3C],      #C    /12
	  [0x7C,0x42,0x42,0x42,0x42,0x42,0x42,0x7C],      #D    /13
	  [0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x7C],      #E    /14
	  [0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x40],      #F    /15
	  [0x3C,0x40,0x40,0x40,0x40,0x44,0x44,0x3C],      #G    /16
	  [0x44,0x44,0x44,0x7C,0x44,0x44,0x44,0x44],      #H    /17
	  [0x7C,0x10,0x10,0x10,0x10,0x10,0x10,0x7C],      #I    /18
	  [0x3C,0x8,0x8,0x8,0x8,0x8,0x48,0x30],           #J    /19 
	  [0x0,0x24,0x28,0x30,0x20,0x30,0x28,0x24],       #K    /20
	  [0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7C],      #L    /21
	  [0x81,0xC3,0xA5,0x99,0x81,0x81,0x81,0x81],      #M    /22
	  [0x0,0x42,0x62,0x52,0x4A,0x46,0x42,0x42],       #N    /23
	  [0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C],      #O    /24
	  [0x3C,0x22,0x22,0x22,0x3C,0x20,0x20,0x20],      #P    /25
	  [0x1C,0x22,0x22,0x22,0x22,0x26,0x22,0x1D],      #Q    /26
	  [0x3C,0x22,0x22,0x22,0x3C,0x24,0x22,0x22],      #R    /27
	  [0x1E,0x20,0x20,0x3E,0x02,0x2,0x2,0x3C],        #S    /28
	  [0x0,0x3E,0x8,0x8,0x8,0x8,0x8,0x8],             #T    /29
	  [0x42,0x42,0x42,0x42,0x42,0x42,0x22,0x1C],      #U    /30
	  [0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18],      #V    /31
	  [0x0,0x49,0x49,0x49,0x49,0x2A,0x1C,0x0],        #W    /32
	  [0x0,0x41,0x22,0x14,0x8,0x14,0x22,0x41],        #X    /33
	  [0x41,0x22,0x14,0x8,0x8,0x8,0x8,0x8],           #Y    /34
	  [0x0,0x7F,0x2,0x4,0x8,0x10,0x20,0x7F],          #Z    /35
	  [0x00,0x00,0x1E,0x22,0x0E,0x12,0x26,0x1A],      #a    /36
          [0x20,0x20,0x38,0x24,0x22,0x22,0x24,0x39],      #b    /37
          [0x00,0x00,0x00,0x00,0x3C,0x20,0x20,0x3C],      #c    /38
          [0x00,0x02,0x02,0x02,0x3E,0x22,0x22,0x3E],      #d    /39
          [0x00,0x00,0x00,0x18,0x24,0x3C,0x20,0x3C],      #e    /40
          [0x00,0x00,0x08,0x10,0x38,0x10,0x10,0x10],      #f    /41
          [0x00,0x08,0x38,0x28,0x38,0x08,0x28,0x38],      #g    /42
          [0x00,0x00,0x20,0x20,0x20,0x38,0x28,0x28],      #h    /43
          [0x00,0x00,0x00,0x10,0x00,0x10,0x10,0x10],      #i    /44
          [0x00,0x08,0x00,0x08,0x08,0x08,0x08,0x18],      #j    /45
          [0x00,0x00,0x20,0x20,0x20,0x28,0x30,0x28],      #k    /46
          [0x00,0x00,0x00,0x10,0x10,0x10,0x10,0x18],      #l    /47
          [0x00,0x00,0x00,0x00,0x40,0x6A,0x55,0x55],      #m    /48
          [0x00,0x00,0x00,0x00,0x10,0x1A,0x15,0x15],      #n    /49
          [0x00,0x00,0x00,0x00,0x18,0x24,0x24,0x18],      #o    /50
          [0x00,0x00,0x00,0x38,0x28,0x38,0x20,0x20],      #p    /51
          [0x00,0x00,0x00,0x38,0x28,0x38,0x08,0x08],      #q    /52
          [0x00,0x00,0x00,0x00,0x2C,0x30,0x20,0x20],      #r    /53
          [0x00,0x00,0x00,0x18,0x20,0x18,0x04,0x18],      #s    /54
          [0x00,0x00,0x00,0x00,0x10,0x18,0x10,0x10],      #t    /55
          [0x00,0x00,0x00,0x00,0x00,0x28,0x28,0x38],      #u    /56
          [0x00,0x00,0x00,0x00,0x00,0x44,0x28,0x10],      #v    /57
          [0x00,0x00,0x00,0x00,0x00,0x82,0x54,0x28],      #w    /58
          [0x00,0x00,0x00,0x00,0x00,0x28,0x10,0x28],      #x    /59
          [0x00,0x00,0x00,0x00,0x0A,0x03,0x28,0x10],      #y    /60
          [0x00,0x00,0x00,0x00,0x3C,0x08,0x10,0x3C],      #z    /61
          [0x08,0x10,0x20,0x18,0x24,0x3C,0x20,0x3C],      #é
          [0x10,0x08,0x04,0x18,0x24,0x3C,0x20,0x3C],      #è
          [0x00,0x18,0x24,0x18,0x24,0x3C,0x20,0x3C],      #ê
          [0x00,0x00,0x10,0x28,0x44,0x00,0x00,0x00],      #^    
          [0x00,0x20,0x10,0x08,0x04,0x80,0x10,0x20],      #>
          [0x00,0x04,0x08,0x10,0x20,0x10,0x08,0x04],      #<
          [0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x40],      #,
          [0x00,0x00,0x00,0x00,0x20,0x00,0x20,0x40],      #;
          [0x00,0x10,0x10,0x10,0x10,0x10,0x00,0x10],      #!
          [0x18,0x24,0x24,0x08,0x10,0x10,0x00,0x10],      #?
          [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80],      #.
          [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x54],      #...
          [0x00,0x00,0x10,0x10,0x7C,0x10,0x10,0x00],      #+
          [0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00],      #-
          [0x00,0x10,0x54,0x38,0xFE,0x38,0x54,0x10],      #*
          [0x00,0x02,0x04,0x08,0x10,0x02,0x04,0x08],      #/
          [0x00,0x08,0x04,0x02,0x01,0x08,0x04,0x02],      #\
          [0x00,0x00,0x01,0x00,0x7C,0x00,0x01,0x00],      #/(division)
          [0x00,0x20,0x40,0x00,0x00,0x00,0x00,0x00],      #'
          [0x00,0x08,0x10,0x10,0x10,0x10,0x10,0x08],      #(
          [0x00,0x10,0x08,0x08,0x08,0x08,0x08,0x10],      #)
          [0x00,0x18,0x08,0x08,0x08,0x08,0x08,0x18],      #[
          [0x00,0x18,0x10,0x10,0x10,0x10,0x10,0x18],      #]
          [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3C],      #_
          [0x00,0x24,0x24,0x24,0x24,0x24,0x24,0x00],      #||
          [0xE0,0xA0,0xE0,0x00,0x00,0x00,0x00,0x00],      #°
          [0x00,0x18,0x24,0x24,0x1A,0x1C,0x2C,0x32],      #&
          [0x24,0x24,0xFF,0x48,0x48,0xFF,0x90,0x90],      # #
          [0xFF,0x81,0x9D,0xA5,0x9D,0xA2,0xAD,0xB7],      #@
          [0xE1,0xA2,0xE4,0x08,0x10,0x27,0x45,0x87],      #%
          [0x00,0x00,0x06,0x09,0x90,0x60,0x00,0x00],      #~
          [0x00,0x10,0x20,0x20,0x40,0x20,0x20,0x10],      #{
          [0x00,0x08,0x04,0x04,0x02,0x04,0x04,0x08],      #}
          [0x00,0x00,0x48,0x24,0x12,0x24,0x48,0x00],      #" (>>)      
          [0x00,0x00,0x12,0x24,0x48,0x24,0x12,0x00],      #" (<<)
          [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],      #   (espace)          
        ]

#tableau de 128*128 
screen =[]
for i in range(128):
    screen.append(range(128))



#print police[10][0] #A .. 1ere ligne du A

#ecran blanc
for x in range(128):
  for y in range(128):
    screen[x][y]=0xff



locate (0,1,10) # caractere 10 (A)

locate (9,1,12)

locate (17,1,13)

#sauve ecran
fichier = open("test.bin", "w")
fichier.write(chr(2)+chr(1))  # debut de l'image


for i in range(128*128):
    fichier.write(chr(screen[i / 128][i % 128])+chr(screen[i / 128][i %
128])+chr(screen[i / 128][i % 128]))

fichier.close()


